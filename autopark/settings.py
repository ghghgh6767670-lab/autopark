"""
Django settings for autopark project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z*p86p!utow0(f^v6&wv+^9drhtbq)2h7_$&v&#@+otqh)^2u8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'unruminatingly-unbondable-brittanie.ngrok-free.app']

CSRF_TRUSTED_ORIGINS = [
    'https://unruminatingly-unbondable-brittanie.ngrok-free.app',
]
# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'jazzmin',
    # apps for django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # apps for API and AUTH
    'rest_framework',
    'dj_rest_auth',
    'rosetta',
    'rest_framework.authtoken',
    'django_filters',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    "widget_tweaks",

    # apps
    'rental',
]

MIDDLEWARE = [
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'autopark.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'autopark.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGES = [
    ('ru', 'Русский'),
    ('en', 'English'),
]

LOCALE_PATHS = [
    BASE_DIR / 'locale',  # сюда будут складываться файлы переводов
]

LANGUAGE_CODE = 'ru'   # по умолчанию русский
USE_I18N = True
USE_L10N = True

TIME_ZONE = 'UTC'

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
ACCOUNT_LOGIN_METHODS = ["email"]
ACCOUNT_EMAIL_VERIFICATION = 'none'  # 'mandatory' или 'optional' если нужно подтверждение
ACCOUNT_UNIQUE_EMAIL = True

SOCIALACCOUNT_AUTO_SIGNUP = True  # включено по умолчанию
SOCIALACCOUNT_LOGIN_ON_GET = True

LOGIN_URL = '/auth/'

JAZZMIN_SETTINGS = {
    "site_title": "AUTOPARK.KG Admin",
    "site_header": "AUTOPARK.KG",
    "site_brand": "AUTOPARK.KG",
    "welcome_sign": "Добро пожаловать в панель управления",
    "site_logo": None,             # без логотипа — чище
    "login_logo": None,
    "login_logo_dark": None,

    # Никаких ярких меню/кнопок
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],               # можно скрыть лишние приложения
    "hide_models": [],

    # Верхнее меню (минимально)
    "topmenu_links": [
        {"name": "Главная", "url": "admin:index", "permissions": ["auth.view_user"]},
    ],

    # Иконки — нейтральные, стандартные
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "rental.Vehicle": "fas fa-car-side",
        "rental.VehicleType": "fas fa-tags",
        "rental.Booking": "fas fa-calendar-check",
        "rental.Payment": "fas fa-file-invoice-dollar",
        "rental.Review": "fas fa-comment-dots",
        "rental.PricePlan": "fas fa-money-bill",
        "rental.Location": "fas fa-map-marker-alt",
        "rental.Feature": "fas fa-list",
        "rental.RentalPolicy": "fas fa-file-alt",
    },

    # Формат форм — аккуратно по вкладкам
    "changeform_format": "horizontal_tabs",
    "changeform_format_ov": {
        "rental.Vehicle": "horizontal_tabs",
        "rental.Booking": "horizontal_tabs",
    },

    # Поиск по моделям
    "search_model": [
        "rental.Vehicle",
        "rental.Booking",
        "rental.Payment",
        "rental.Review",
        "auth.User",
    ],
    "custom_css": "jazzmin/custom.css",
    "show_ui_builder": False,  # убрать конструктор тем
"language_chooser": True,
}


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": True,
    "brand_small_text": False,
    "brand_colour": False,
    "accent": None,
    "navbar": "navbar-light navbar-white",
    "no_navbar_border": True,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "journal",
    "dark_mode_theme": "cyborg",
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "sidebar_brand": None,
    "actions_sticky_top": True,
    
}